+ make clean all
rm -rf *.o matrix_mult*
g++ -c -fopenmp matrix.cpp
g++ -c -fopenmp pagerank.cpp
g++ -O3 -std=c++11 -fopenmp main.cpp matrix.o pagerank.o -o matrix_mult.exe
+ ./matrix_mult.exe
1. Generate graph and test counter of number of paths
power = 1
0 1 1 1 1 1 1 1 1 1 
0 0 1 1 1 1 1 1 1 1 
0 0 0 1 1 1 1 1 1 1 
0 0 0 0 1 1 1 1 1 1 
0 0 0 0 0 1 1 1 1 1 
0 0 0 0 0 0 1 1 1 1 
0 0 0 0 0 0 0 1 1 1 
0 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 

power = 2
0 0 1 2 3 4 5 6 7 8 
0 0 0 1 2 3 4 5 6 7 
0 0 0 0 1 2 3 4 5 6 
0 0 0 0 0 1 2 3 4 5 
0 0 0 0 0 0 1 2 3 4 
0 0 0 0 0 0 0 1 2 3 
0 0 0 0 0 0 0 0 1 2 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 3
0 0 0 1 3 6 10 15 21 28 
0 0 0 0 1 3 6 10 15 21 
0 0 0 0 0 1 3 6 10 15 
0 0 0 0 0 0 1 3 6 10 
0 0 0 0 0 0 0 1 3 6 
0 0 0 0 0 0 0 0 1 3 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 4
0 0 0 0 1 4 10 20 35 56 
0 0 0 0 0 1 4 10 20 35 
0 0 0 0 0 0 1 4 10 20 
0 0 0 0 0 0 0 1 4 10 
0 0 0 0 0 0 0 0 1 4 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 5
0 0 0 0 0 1 5 15 35 70 
0 0 0 0 0 0 1 5 15 35 
0 0 0 0 0 0 0 1 5 15 
0 0 0 0 0 0 0 0 1 5 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 6
0 0 0 0 0 0 1 6 21 56 
0 0 0 0 0 0 0 1 6 21 
0 0 0 0 0 0 0 0 1 6 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 7
0 0 0 0 0 0 0 1 7 28 
0 0 0 0 0 0 0 0 1 7 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 8
0 0 0 0 0 0 0 0 1 8 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

power = 9
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 

2. Generate small random (or select some graph) and implement pagerank procedure. Compare with naive ranking
Total number of teams: 20
Man City --> 0.364984
Liverpool --> 0.33706
Chelsea --> 0.294374
Man Utd --> 0.264955
Spurs --> 0.255404
Leicester --> 0.239027
Arsenal --> 0.223443
Wolves --> 0.217623
Southampton --> 0.213846
Everton --> 0.201013
Bournemouth --> 0.194477
West Ham --> 0.193539
Burnley --> 0.176748
Newcastle --> 0.176509
Aston Villa --> 0.171075
Sheffield Utd --> 0.167836
Brighton --> 0.164734
Watford --> 0.161545
Norwich --> 0.145402
Crystal Palace --> 0.145074

3. Try tricks for evaluation of performance
63.9959
63.9959
63.9959
63.9959
63.9959
Random graph non-parallelized: 
Min calc time in seconds = 1.78683
Avg calc time in seconds = 1.85577
Max calc time in seconds = 1.9387

63.9959
63.9959
63.9959
63.9959
63.9959
Random graph parallelized: 
Min calc time in seconds = 0.552326
Avg calc time in seconds = 0.843557
Max calc time in seconds = 1.75684

